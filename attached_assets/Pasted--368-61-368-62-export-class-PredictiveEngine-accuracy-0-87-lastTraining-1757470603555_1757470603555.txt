@@ -368,61 +368,62 @@ export class PredictiveEngine {
        accuracy: 0.87,
        lastTrainingDate: new Date(),
        version: '2.1',
        status: 'active'
      },
      {
        modelId: 'delinquency_risk_v1',
        modelName: 'delinquency_risk_v1',
        modelType: 'classification',
        predictionTarget: 'delinquency_probability',
        features: ['payment_history', 'contact_attempts', 'payment_method', 'economic_indicators'],
        accuracy: 0.82,
        lastTrainingDate: new Date(),
        version: '1.3',
        status: 'active'
      }
    ];

    for (const model of models) {
      this.models.set(model.modelName, model);
    }
  }

  private async extractLoanFeatures(client: any, loanId: string): Promise<Record<string, any>> {
    try {
      const result = await client.query(`
        SELECT 
          l.current_balance_cents / 100.0 as current_balance,
          l.original_balance_cents / 100.0 as original_balance,
          lb.current_interest_rate,
          lb.current_payment_amount_cents / 100.0 as payment_amount,
        const result = await client.query(`
        SELECT
          COALESCE(lb.principal_minor, 0) / 100.0 as current_balance,
          l.original_amount::numeric as original_balance,
          l.interest_rate as current_interest_rate,
          l.payment_amount as payment_amount,
          b.credit_score,
          EXTRACT(DAYS FROM (CURRENT_DATE - l.origination_date)) as loan_age_days
          EXTRACT(DAYS FROM (CURRENT_DATE - l.funding_date)) as loan_age_days
        FROM loans l
        LEFT JOIN loan_balances lb ON l.id = lb.loan_id
        LEFT JOIN borrowers b ON l.borrower_id = b.id
        LEFT JOIN loan_borrowers lbj ON l.id = lbj.loan_id
        LEFT JOIN borrowers b ON lbj.borrower_id = b.id
        WHERE l.id = $1
      `, [loanId]);

      if (result.rowCount === 0) {
        // Return default features if loan not found
        return {
          current_balance: 250000,
          original_balance: 300000,
          current_interest_rate: 0.045,
          payment_amount: 1520,
          credit_score: 720,
          loan_age_days: 180
        };
      }

      return result.rows[0];
    } catch (error) {
      // Return simulated features if tables don't exist
      return {
        current_balance: 250000,
        original_balance: 300000,
        current_interest_rate: 0.045,
        payment_amount: 1520,
        credit_score: 720,
        loan_age_days: 180